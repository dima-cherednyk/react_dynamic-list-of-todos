{"version":3,"sources":["components/List/List.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","types/FilterOption.ts","App.tsx","index.tsx"],"names":["List","openedTodoId","onClick","todo","className","id","completed","classNames","title","type","TodoList","visibleTodos","map","TodoFilter","onChangeSelect","onChangeInput","eraseQuery","filterQuery","handleSubmit","onSubmit","onChange","value","placeholder","Loader","TodoModal","selectedUser","todoInfo","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterOption","App","useState","todoList","setTodoList","filteredTodos","setFilteredTodos","setSelectedUser","openedTodo","setOpenedTodo","setTodoInfo","setOpenedTodoId","setFilterQuery","useEffect","loadTodos","a","todos","clickOnEye","userId","user","filter","toLowerCase","includes","event","target","active","all","preventDefault","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5791e9f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  openedTodoId: number | null;\n  onClick: (todo: Todo) => void;\n  todo: Todo;\n};\n\nexport const List: React.FC<Props> = ({ openedTodoId, onClick, todo }) => {\n  return (\n    <>\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {\n          todo.completed && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )\n        }\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames(\n            {\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            },\n          )}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onClick(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames(\n              'far',\n              {\n                'fa-eye-slash': openedTodoId === todo.id,\n                'fa-eye': openedTodoId !== todo.id,\n              },\n            )}\n            />\n          </span>\n        </button>\n      </td>\n    </>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { List } from '../List/List';\n\ntype Props = {\n  visibleTodos: Todo[];\n  openedTodoId: number | null;\n  onClick: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    visibleTodos,\n    openedTodoId,\n    onClick,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map((todo: Todo) => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={\n              openedTodoId === todo.id ? 'has-background-info-light' : ''\n            }\n          >\n            <List\n              openedTodoId={openedTodoId}\n              onClick={onClick}\n              todo={todo}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import './TodoFilter.scss';\n\ntype Props = {\n  onChangeSelect: (option: React.ChangeEvent<HTMLSelectElement>) => void;\n  onChangeInput: (query: React.ChangeEvent<HTMLInputElement>) => void;\n  eraseQuery: () => void;\n  filterQuery: string;\n  handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n};\n\nexport const TodoFilter: React.FC<Props>\n  = ({\n    onChangeSelect,\n    onChangeInput,\n    eraseQuery,\n    filterQuery,\n    handleSubmit,\n  }) => {\n    return (\n      <form className=\"field has-addons\" onSubmit={handleSubmit}>\n        <p className=\"control\">\n          <span className=\"select\">\n            <select data-cy=\"statusSelect\" onChange={onChangeSelect}>\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            onChange={onChangeInput}\n            value={filterQuery}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {filterQuery && (\n            <span className=\"icon is-right isClickable\">\n              <button\n                data-cy=\"clearSearchButton\"\n                aria-label=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={eraseQuery}\n              />\n            </span>\n          )}\n        </p>\n      </form>\n    );\n  };\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedUser: User | null;\n  todoInfo: Todo | null;\n  onClick: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    selectedUser,\n    todoInfo,\n    onClick,\n  },\n) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser\n        ? (\n          <Loader />\n        ) : (todoInfo && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todoInfo.id}`}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                aria-label=\"modal-close\"\n                onClick={onClick}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todoInfo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {\n                  todoInfo.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>\n                }\n\n                {' by '}\n\n                <a href={`mailto:${selectedUser.email}`}>\n                  {selectedUser.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL}${url}.json`;\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterOption {\n  active = 'active',\n  completed = 'completed',\n  all = 'all',\n}\n","import React, { useEffect, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { FilterOption } from './types/FilterOption';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [openedTodo, setOpenedTodo] = useState<boolean>(false);\n  const [todoInfo, setTodoInfo] = useState<Todo | null>(null);\n  const [openedTodoId, setOpenedTodoId] = useState<number | null>(null);\n  const [filterQuery, setFilterQuery] = useState<string>('');\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      const todos = await getTodos();\n\n      setTodoList(todos);\n      setFilteredTodos(todos);\n    };\n\n    loadTodos();\n  }, []);\n\n  const filterTodos = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case FilterOption.active:\n        setFilteredTodos(todoList.filter(todo => todo.completed === false));\n\n        break;\n\n      case FilterOption.completed:\n        setFilteredTodos(todoList.filter(todo => todo.completed === true));\n\n        break;\n\n      case FilterOption.all:\n        setFilteredTodos(todoList);\n\n        break;\n\n      default:\n        setFilteredTodos(todoList);\n\n        break;\n    }\n  };\n\n  const filterQueryTodos\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault();\n      setFilterQuery(event.target.value);\n    };\n\n  const eraseQuery = () => {\n    setFilterQuery('');\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  const clickOnEye = async (todo: Todo) => {\n    setOpenedTodo(true);\n    setOpenedTodoId(todo.id);\n    const user = await getUser(todo.userId);\n\n    setSelectedUser(user);\n    setTodoInfo({ ...todo });\n  };\n\n  const closeTodo = () => {\n    setOpenedTodo(false);\n    setSelectedUser(null);\n    setTodoInfo(null);\n    setOpenedTodoId(null);\n  };\n\n  const visibleTodos = filteredTodos.filter(todo => todo.title.toLowerCase()\n    .includes(filterQuery.toLowerCase()));\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeSelect={filterTodos}\n                onChangeInput={filterQueryTodos}\n                eraseQuery={eraseQuery}\n                filterQuery={filterQuery}\n                handleSubmit={handleSubmit}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todoList.length > 0\n                  ? (\n                    <TodoList\n                      visibleTodos={visibleTodos}\n                      openedTodoId={openedTodoId}\n                      onClick={clickOnEye}\n                    />\n                  )\n                  : <Loader />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {openedTodo && (\n        <TodoModal\n          selectedUser={selectedUser}\n          onClick={closeTodo}\n          todoInfo={todoInfo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}