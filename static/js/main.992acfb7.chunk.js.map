{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todoList","openedTodoId","filterOption","filterQuery","onClick","visibleTodos","filter","todo","completed","title","includes","className","map","id","type","TodoFilter","onChangeSelect","onChangeInput","eraseQuery","handleSubmit","onSubmit","onChange","value","placeholder","style","pointerEvents","Loader","TodoModal","selectedUser","openTodo","todoInfo","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodoList","setSelectedUser","openedTodo","setOpenedTodo","setTodoInfo","setOpenedTodoId","setFilterOption","setFilterQuery","loadTodos","a","todos","clickOnEye","userId","user","option","target","query","preventDefault","event","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.992acfb7.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todoList: Todo[];\n  openedTodoId: number | null;\n  filterOption: boolean | null;\n  filterQuery: string;\n  onClick: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todoList,\n    openedTodoId,\n    filterOption,\n    filterQuery,\n    onClick,\n  },\n) => {\n  let visibleTodos = [...todoList];\n\n  if (filterOption !== null) {\n    visibleTodos = todoList.filter(todo => todo.completed === filterOption);\n  }\n\n  visibleTodos = visibleTodos.filter(todo => todo.title.includes(filterQuery));\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={\n              openedTodoId === todo.id ? 'has-background-info-light' : ''\n            }\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {\n                todo.completed\n                  ? (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )\n                  : ''\n              }\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed ? 'has-text-success' : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onClick(todo)}\n              >\n                {openedTodoId === todo.id\n                  ? (\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  )\n                  : (\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  )}\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  onChangeSelect: (option: React.ChangeEvent<HTMLSelectElement>) => void;\n  onChangeInput: (query: React.ChangeEvent<HTMLInputElement>) => void;\n  eraseQuery: () => void;\n  filterQuery: string;\n  handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n};\n\nexport const TodoFilter: React.FC<Props>\n  = ({\n    onChangeSelect,\n    onChangeInput,\n    eraseQuery,\n    filterQuery,\n    handleSubmit,\n  }) => {\n    return (\n      <form className=\"field has-addons\" onSubmit={handleSubmit}>\n        <p className=\"control\">\n          <span className=\"select\">\n            <select data-cy=\"statusSelect\" onChange={onChangeSelect}>\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            onChange={onChangeInput}\n            value={filterQuery}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {filterQuery && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={eraseQuery}\n              />\n            </span>\n          )}\n        </p>\n      </form>\n    );\n  };\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedUser: User | null;\n  openTodo: boolean;\n  todoInfo: Todo | null;\n  onClick: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    selectedUser,\n    openTodo,\n    todoInfo,\n    onClick,\n  },\n) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        openTodo && <Loader />\n      ) : (todoInfo && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoInfo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoInfo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todoInfo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={selectedUser.email}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL}${url}.json`;\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState<Todo[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [openedTodo, setOpenedTodo] = useState<boolean>(false);\n  const [todoInfo, setTodoInfo] = useState<Todo | null>(null);\n  const [openedTodoId, setOpenedTodoId] = useState<number | null>(null);\n  const [filterOption, setFilterOption] = useState<boolean | null>(null);\n  const [filterQuery, setFilterQuery] = useState<string>('');\n\n  const loadTodos = async () => {\n    const todos = await getTodos();\n\n    setTodoList(todos);\n  };\n\n  const filterTodos = (option: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (option.target.value) {\n      case 'active':\n        setFilterOption(false);\n\n        break;\n\n      case 'completed':\n        setFilterOption(true);\n\n        break;\n\n      default:\n        setFilterOption(null);\n\n        break;\n    }\n  };\n\n  const filterQueryTodos\n    = (query: React.ChangeEvent<HTMLInputElement>) => {\n      query.preventDefault();\n      setFilterQuery(query.target.value);\n    };\n\n  const eraseQuery = () => {\n    setFilterQuery('');\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  const clickOnEye = async (todo: Todo) => {\n    setOpenedTodo(true);\n    setOpenedTodoId(todo.id);\n    const user = await getUser(todo.userId);\n\n    setSelectedUser(user);\n    setTodoInfo({\n      id: todo.id,\n      title: todo.title,\n      completed: todo.completed,\n      userId: todo.userId,\n    });\n  };\n\n  const closeTodo = () => {\n    setOpenedTodo(false);\n    setSelectedUser(null);\n    setTodoInfo(null);\n    setOpenedTodoId(null);\n  };\n\n  loadTodos();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeSelect={filterTodos}\n                onChangeInput={filterQueryTodos}\n                eraseQuery={eraseQuery}\n                filterQuery={filterQuery}\n                handleSubmit={handleSubmit}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todoList.length > 0\n                  ? (\n                    <TodoList\n                      todoList={todoList}\n                      openedTodoId={openedTodoId}\n                      filterOption={filterOption}\n                      filterQuery={filterQuery}\n                      onClick={clickOnEye}\n                    />\n                  )\n                  : <Loader />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {openedTodo && (\n        <TodoModal\n          selectedUser={selectedUser}\n          onClick={closeTodo}\n          openTodo={openedTodo}\n          todoInfo={todoInfo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}